generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")

  relationMode = "prisma"
}

model User {
  id           String    @id @default(uuid())
  email        String    @unique(map: "User_email_key")
  name         String?
  password     String?
  avatar       String?
  createdAt    DateTime  @default(now())
  role         String?
  refreshToken String?
  phone        String?
  seeker       Seeker?
  employer     Employer?
}

model Seeker {
  id          String        @id @default(uuid())
  user        User?         @relation(fields: [userId], references: [id])
  userId      String        @unique
  birthday    String?
  summary     String?       @db.Text
  education   Education[]
  experience  Experience[]
  skills      Skill[]
  Application Application[]
  savedJobs   SavedJobs[]

  @@index([userId])
}

model Skill {
  id       String @id @default(uuid())
  name     String @unique
  seekerId String
  seeker   Seeker @relation(fields: [seekerId], references: [id])

  @@index([seekerId])
}

model Education {
  id          String  @id @default(uuid())
  startDate   String
  endDate     String
  title       String
  institution String
  description String?
  GPA         Float?
  seekerId    String
  seeker      Seeker  @relation(fields: [seekerId], references: [id])

  @@index([seekerId])
}

model Experience {
  id               String @id @default(uuid())
  startDate        String
  endDate          String
  location         String
  position         String
  companyName      String
  responsibilities String @db.Text
  seekerId         String
  seeker           Seeker @relation(fields: [seekerId], references: [id])

  @@index([seekerId])
}

model SavedJobs {
  id       String @id @default(uuid())
  seekerId String
  seeker   Seeker @relation(fields: [seekerId], references: [id])
  jobAds   JobAds @relation(fields: [jobAdsId], references: [id])
  jobAdsId String

  @@index([jobAdsId])
  @@index([seekerId])
}

model Employer {
  id          String   @id @default(uuid())
  user        User?    @relation(fields: [userId], references: [id])
  userId      String?  @unique
  companyName String
  industry    String
  contactInfo String
  jobAds      JobAds[]

  @@index([userId])
}

model JobAds {
  id           String        @id @default(uuid())
  title        String
  description  String
  requirements String
  salary       Float
  employer     Employer      @relation(fields: [employerId], references: [id])
  employerId   String
  applications Application[]
  savedJobsIds String?
  savedJobs    SavedJobs[]

  @@index([employerId])
}

model Application {
  id        String   @id @default(uuid())
  date      DateTime @default(now())
  status    String
  jobSeeker Seeker   @relation(fields: [seekerId], references: [id])
  seekerId  String
  jobAds    JobAds   @relation(fields: [jobAdsId], references: [id])
  jobAdsId  String

  @@index([jobAdsId])
  @@index([seekerId])
}
